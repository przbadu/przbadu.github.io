[ { "title": "ElasticSearch and Kibana setup with docker", "url": "/posts/elasticsearch-and-kibana-setup-with-docker/", "categories": "Docker", "tags": "Elastic search, docker, docker-compose", "date": "2022-12-21 18:30:00 +0545", "snippet": "ElasticSearch is a full text search engine and Kibana is a free and open user interface that lets you visualize your Elasticsearch data and navigate the Elastic Stack.In this post we will see a summary of how we can configure both tools using docker and access them from the browserDocker setupWe will use docker-compose here to setup both tools, but you can also use docker cli to acheive it.create a docker-compose.yml file or I like to call it services.yml file where we will setup all the configuration options for both servicesversion: &#39;3.7&#39;services: elasticsearch: image: docker.elastic.co/elasticsearch/elasticsearch:6.2.2 container_name: elasticsearch restart: always environment: - xpack.security.enabled=false - discovery.type=single-node ulimits: memlock: soft: -1 hard: -1 nofile: soft: 65536 hard: 65536 cap_add: - IPC_LOCK volumes: - elasticsearch-data:/usr/share/elasticsearch/data ports: - 9200:9200 - 9300:9300 kibana: container_name: kibana_622 image: docker.elastic.co/kibana/kibana:6.2.2 restart: always environment: - ELASTICSEARCH_HOSTS=http://elasticsearch:9200 ports: - 5601:5601 depends_on: - elasticsearchvolumes: elasticsearch-data: driver: localhow to run itdocker-compose -f &amp;lt;filename.yml&amp;gt; up -dAnd then visit http://localhost:5601 to see kibana dashbaord. Default password is elastic -f option allow us to provide file name if file is different than docker-compose.yml. -d option will run containers in deamonHow to clean restart these docker instance IMPORTANT NOTE: below command will kill all processes and remove them. It will also remove all of the volume, so you will loose previous datadocker-compose downdocker rm -f $(docker ps -a -q)docker volume rm $(docker volume ls -q)docker-compose -f services.yml up -dHow to fix test environment to use elastic search using chewyCreate config/initializers/chewy.yml file and add followingChewy.settings = { host: &#39;localhost:9200&#39; }Or change the port where your elastic search is running, if you had made any changes on above services.yml file" }, { "title": "my neovim configuration", "url": "/posts/my-vim-configuration/", "categories": "vim", "tags": "vim, ide, rubyonrails, rails, javascript", "date": "2022-06-05 09:37:00 +0545", "snippet": "Why vim and neovim?Vim is a highly configurable text editor built to make creating and changing any kind of text very efficient. It is included as “vi” with most UNIX systems and with Apple OS X.vim is highly customizable and it is the default fallback editor in most of the linux systems. If you are server admin, then vim can be a great tool for you. If you are a programmer, it already supports 100s of programming languages. Recently I have switched from vim to neovim and neovim is fully compatible with Vim’s editing model and Vimscript.How to install neovim?If you want to use vim, it is already available in most of the linux OS. you can follow https://vim.org to download and install it.We are going to use Lunarvim for our nvim IDE. It has lots of great feature which you can find in the official website.You can follow Installation section to install Lunarvim and also all the prerequisites.Install latest neovim# linuxsudo snap install neovim --classic# Macbrew install neovimIn this post, we are going to setup Lunar vim for Ruby on Rails development, but feel free to check Lunarvim Plugins section to install plugins as your need.Configuration fileOpen ~/.config/lvim/config.lua file and keep default configuration and replace following sections in the filechange the treesitter list of your choice-- if you don&#39;t want all the parsers change this to a table of the ones you wantlvim.builtin.treesitter.ensure_installed = { &quot;bash&quot;, &quot;javascript&quot;, &quot;json&quot;, &quot;lua&quot;, &quot;python&quot;, &quot;typescript&quot;, &quot;css&quot;, &quot;ruby&quot;, &quot;yaml&quot;, &quot;vue&quot;,}Additional plugins in lvim.plugins sectionlvim.plugins = { {&quot;vim-test/vim-test&quot;}, {&quot;tpope/vim-rails&quot;}, {&quot;alvan/vim-closetag&quot;}, {&quot;kdheepak/lazygit.nvim&quot;}, {&quot;APZelos/blamer.nvim&quot;}, -- git blame -- {&quot;github/copilot.vim&quot;}, -- github copilot {&quot;feline-nvim/feline.nvim&quot;}, {&quot;jceb/vim-orgmode&quot;}, -- vim org mode, similar to emacs orgmode {&quot;tpope/vim-surround&quot;}, -- surround vim {&quot;dhruvasagar/vim-table-mode&quot;}, --format markdown tables}Add below configurations at the end of the file-- VIM configurations (my custom configurations)-- relative line numbervim.o.relativenumber = true-- vim-test keybindingslocal map = vim.api.nvim_set_keymapmap(&#39;n&#39;, &#39;&amp;lt;Leader&amp;gt;tf&#39;, &#39;:TestFile&amp;lt;CR&amp;gt;&#39;, {silent = true})map(&#39;n&#39;, &#39;&amp;lt;Leader&amp;gt;tt&#39;, &#39;:TestNearest&amp;lt;CR&amp;gt;&#39;, {silent = true})map(&#39;n&#39;, &#39;&amp;lt;Leader&amp;gt;ts&#39;, &#39;:TestSuite&amp;lt;CR&amp;gt;&#39;, {silent = true})map(&#39;n&#39;, &#39;&amp;lt;Leader&amp;gt;tl&#39;, &#39;:TestLast&amp;lt;CR&amp;gt;&#39;, {silent = true})map(&#39;n&#39;, &#39;&amp;lt;Leader&amp;gt;tg&#39;, &#39;:TestVisit&amp;lt;CR&amp;gt;&#39;, {silent = true})-- vim-test strategyvim.g[&#39;test#strategy&#39;] = &#39;neovim&#39;-- using neovim strategy, so that pressing anykey will not close test result windowvim.g[&#39;test#neovim#start_normal&#39;] = 1-- autoclose tag-- enable plugin for file extensionsvim.g[&#39;closetag_filenames&#39;] = &#39;*.html,*.erb&#39;Some of the plugins worth mentioning vim-test: Quickly test your rails project within neovim vim-rails: This is a feature rich plugin for rails Easily navigate between pages :help rails-navigation Easily generate missing file by appending ! Interface to the rails command, e.g: :Rails console, :Rails db:migrate, :Rails g controller example, etc Partial extraction :help rails-:Extract Integrate with other plugins :help rails-integration vim-closetag: auto close html and erb tags lazygit: One of my favorite terminal UI for git commands. This is so powerful, just try it." }, { "title": "My tmux configuration and workflow", "url": "/posts/my-tmux-configuration-and-workflow/", "categories": "cli, tips", "tags": "cli", "date": "2022-06-05 07:49:00 +0545", "snippet": "Follow tmux wiki for more informationInstall tmux# ubuntusudo apt install tmux# macbrew install tmuxTmux configuration fileAfter tmux is successfully installed, we can customize tmux shortcut keys and other configurationsby creating a ~/.tmux.conf file and adding configuration options in this file.Here is my ~/.tmux.conf file, feel free to copy it############################ Configuration############################ use 256 term for pretty colors# set -g default-terminal &quot;screen-256color&quot; # making tmux slowset -g default-terminal &quot;xterm-256color&quot;# Needs this line also to overrides the default colorset-option -ga terminal-overrides &quot;,xterm-256color:Tc&quot;# Enable mouse supportset -g mouse on# increase scroll-back historyset -g history-limit 5000# use vim key bindingssetw -g mode-keys vi# decrease command delay (increases vim responsiveness)set -sg escape-time 1# increase repeat time for repeatable commandsset -g repeat-time 1000# start window index at 1set -g base-index 1# start pane index at 1setw -g pane-base-index 1# highlight window when it has new activitysetw -g monitor-activity onset -g visual-activity on# re-number windows when one is closedset -g renumber-windows on# Fix nightfly color scheme to display correctly inside tmuxset -ga terminal-overrides &#39;,xterm-256color:Tc&#39;# enable pbcopy and pbpaste# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard/blob/master/README.md# set-option -g default-command &quot;reattach-to-user-namespace -l zsh&quot;############################ Key Bindings############################ tmux prefixset -g prefix C-b# pasteunbind C-pbind C-p paste-buffer# window splittingunbind %bind | split-window -hunbind &#39;&quot;&#39;bind - split-window -v -p 20# quickly switch panesunbind ^Bbind ^B select-pane -t :.+# switch panes using Alt-arrow without prefixbind -n M-h select-pane -Lbind -n M-l select-pane -Rbind -n M-k select-pane -Ubind -n M-j select-pane -D# swap windowsbind-key -n C-S-Left swap-window -t -1bind-key -n C-S-Right swap-window -t +1# Quickly view system &amp;amp; process info in htopbind-key h split-window -h &quot;htop&quot;# Quickly edit todo listbind-key w split-window -h &quot;vim ~/vimwiki/index.md&quot;# rails specificbind-key -n M-s split-window -h &quot;bundle exec sidekiq&quot;bind-key -n M-r split-window -v -p 20 &quot;redis-server&quot;# force a reload of the config fileunbind rbind r source-file ~/.tmux.conf \\; display &quot;Reloaded!&quot;############################ Status Bar############################ set refresh interval for status barset -g status-interval 30# center the status barset -g status-justify left# show session, window, pane in left status barset -g status-left-length 40set -g status-left &#39;#[fg=green]#S#[fg=blue] #I:#P #[default]&#39;# show hostname, date, time, and battery in right status barset-option -g status-right &#39;#[fg=green]#H#[default] %m/%d/%y %I:%M #[fg=red]#(battery discharging)#[default]#(battery charging)#{net_speed}&#39;############################ Colors############################ color status barset -g status-style bg=colour235set -g status-style fg=white# highlight current windowset-window-option -g window-status-current-style bg=blackset-window-option -g window-status-current-style fg=green# set color of active pane# set -g pane-border-style bg=colour235# set -g pane-border-style fg=black# set -g pane-active-border-style bg=green# set -g pane-active-border-style fg=black# border coloursset -g pane-border-style fg=blueset -g pane-active-border-style bg=default,fg=blue# Resize panebind-key J resize-pane -D 5bind-key K resize-pane -U 5bind-key H resize-pane -L 5bind-key L resize-pane -R 5############################ Plugins###########################set -g @plugin &#39;tmux-plugins/tpm&#39;set -g @plugin &#39;tmux-plugins/tmux-sidebar&#39;set -g @plugin &#39;tmux-plugins/tmux-net-speed&#39;# Display internet download and upload speed# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)run -b &#39;~/.tmux/plugins/tpm/tpm&#39;Install tmux plugin manager (TPM)Learn more about TPM.And here are the list of pluginsInstallationInstalling TPM is easy, just need to clone repo inside~/.tmux/plugins/tpm/ directory and we are donegit clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpmWith that you are all done with setting up tmux in your machine.Here are the shortcut keys as per my configurations: Key Description C + b Prefix key C + p paste buffer prefix + | split window horizontally prefix + - split window vertically prefix + b toggle switch pane alt + h select left pane alt + l select right pane alt + j select down pane alt + k select up pane C + Shift + ← Swipe window to left C + Shift + → Swipe window to right prefix + h Quickly view htop info prefix + r Reload tmux configuration changes Tmux workflowWith tmux you can easily build a workflow for daily task you do inside tmux terminal.Here is my workflow for my rails application that I always need to do before starting my work.You can copy this file either in one of the executable PATH directory or you can also set and alias command to run it.Create aliasI use zsh, so I will add it inside ~/.zshrc you can put it inside ~/.bashrc or any shell you are usingalias tmuxworkflow=&quot;sh ~/.config/tmux/myworkflow.sh&quot;Now create a file inside ~/.config/tmux/myworkflow.sh and add your configuration:SESSION=worktmux new-session -d -s $SESSIONtmux new-window -t $SESSION:1 -n &#39;webserver&#39;tmux select-window -t $SESSION:1tmux send-keys &#39;rails server&#39; C-mtmux split-window -htmux send-keys &#39;bundle exec sidekiq&#39; C-mtmux split-window -vtmux send-keys &#39;elasticsearch&#39; C-mtmux attach -t $SESSIONBasically this will create a new tmux session and name it work Create 2 windows Switch to first window Then in the first window it will run rails server Add horizontal split pane and run bundle exec sidekiq in newly splitted pane Add vertical split pane and run elasticsearch server in that pane" }, { "title": "Devise sign out issue with rails 7", "url": "/posts/devise-sign-out-issue-with-rails-7/", "categories": "Tips, RubyOnRails", "tags": "ruby on rails, devise", "date": "2022-02-10 08:35:00 +0545", "snippet": "After creating my first rails 7 project, I added devise gemfor authentication solution, and there were couple of issues I faced because of rails 7 changes mainly with turbo streams.One of those issue is, your regular link for delete action do not work any more, one of the example is devise sign out link:&amp;lt;%= link_to &quot;Sign out&quot;, destroy_user_session_path, method: :delete %&amp;gt;Or any other link where you are using method: :delete. Now that with rails 7 ships turbo streams by default, you need to make these links compatible with turbo streams by following changes:&amp;lt;%= link_to &quot;Sign out&quot;, destroy_user_session_path, data: { turbo_method: :delete } %&amp;gt;with this subtle change sign out link should work again!Happy Coding!!" }, { "title": "change rails database from sqlite to postgresql", "url": "/posts/change-rails-database-from-sqlite-to-postgresql/", "categories": "Tips, RubyOnRails", "tags": "ruby on rails, database", "date": "2022-01-28 10:43:00 +0545", "snippet": "When you generate your rails applicaton, it by default uses sqlite3 as database adapter and generate configuration files config/database.yml based on sqlite adapter. But when you want to deploy your app to production like heroku, you need to convert your database configuration to use postgresql database adapter.In this post, we will see how to easily convert database.yml configuration from Sqlite to PostgreSQL.Generating default rails app with postgresqlAlso note that you can generate rails default app to use postgres as default adapter using:rails new &amp;lt;project_name&amp;gt; -d &amp;lt;db-adapter&amp;gt;Examplerails new demo_app -d postgresqlConvert sqlite to postgresql before deploymentcreate new rails app with sqliterails new demo_appconvert sqlite to postgresql adapter&amp;gt; rails db:system:change --to=postgresql conflict config/database.ymlOverwrite demo/config/database.yml? (enter &quot;h&quot; for help) [Ynaqdhm] Y force config/database.yml gsub Gemfile gsub GemfileThis command will remove sqlite3 and add pg gem into Gemfile:-# Use sqlite3 as the database for Active Record-gem &quot;sqlite3&quot;, &quot;~&amp;gt; 1.4&quot;+# Use pg as the database for Active Record+gem &quot;pg&quot;, &quot;~&amp;gt; 1.1&quot;And also update config/database.yml file to use pg configuration. Here is the full configuration file:# PostgreSQL. Versions 9.3 and up are supported.## Install the pg driver:# gem install pg# On macOS with Homebrew:# gem install pg -- --with-pg-config=/usr/local/bin/pg_config# On macOS with MacPorts:# gem install pg -- --with-pg-config=/opt/local/lib/postgresql84/bin/pg_config# On Windows:# gem install pg# Choose the win32 build.# Install PostgreSQL and put its /bin directory on your path.## Configure Using Gemfile# gem &quot;pg&quot;#default: &amp;amp;default adapter: postgresql encoding: unicode # For details on connection pooling, see Rails configuration guide # https://guides.rubyonrails.org/configuring.html#database-pooling pool: &amp;lt;%= ENV.fetch(&quot;RAILS_MAX_THREADS&quot;) { 5 } %&amp;gt;development: &amp;lt;&amp;lt;: *default database: demo_development # The specified database role being used to connect to postgres. # To create additional roles in postgres see `$ createuser --help`. # When left blank, postgres will use the default role. This is # the same name as the operating system user running Rails. #username: demo # The password associated with the postgres role (username). #password: # Connect on a TCP socket. Omitted by default since the client uses a # domain socket that doesn&#39;t need configuration. Windows does not have # domain sockets, so uncomment these lines. #host: localhost # The TCP port the server listens on. Defaults to 5432. # If your server runs on a different port number, change accordingly. #port: 5432 # Schema search path. The server defaults to $user,public #schema_search_path: myapp,sharedapp,public # Minimum log levels, in increasing order: # debug5, debug4, debug3, debug2, debug1, # log, notice, warning, error, fatal, and panic # Defaults to warning. #min_messages: notice# Warning: The database defined as &quot;test&quot; will be erased and# re-generated from your development database when you run &quot;rake&quot;.# Do not set this db to the same as development or production.test: &amp;lt;&amp;lt;: *default database: demo_test# As with config/credentials.yml, you never want to store sensitive information,# like your database password, in your source code. If your source code is# ever seen by anyone, they now have access to your database.## Instead, provide the password or a full connection URL as an environment# variable when you boot the app. For example:## DATABASE_URL=&quot;postgres://myuser:mypass@localhost/somedatabase&quot;## If the connection URL is provided in the special DATABASE_URL environment# variable, Rails will automatically merge its configuration values on top of# the values provided in this file. Alternatively, you can specify a connection# URL environment variable explicitly:## production:# url: &amp;lt;%= ENV[&quot;MY_APP_DATABASE_URL&quot;] %&amp;gt;## Read https://guides.rubyonrails.org/configuring.html#configuring-a-database# for a full overview on how database connection configuration can be specified.#production: &amp;lt;&amp;lt;: *default database: demo_production username: demo password: &amp;lt;%= ENV[&quot;DEMO_DATABASE_PASSWORD&quot;] %&amp;gt;Happy Coding!!!" }, { "title": "Rails count vs size vs length", "url": "/posts/rails-count-vs-size-vs-length/", "categories": "Tips, RubyOnRails", "tags": "ruby on rails, performance, count", "date": "2022-01-19 10:24:00 +0545", "snippet": "There are lots of ways to impact performance of your application. Initially when there is less data, everythings looks good, and eventually, when your traffic and active number of users using your application grows, you will start seeing some serious performance problem in your application.And in this post we are going to look at why we need to understand difference between .count, length and .size methods to avoid performance problem.Befor starting the comparision, lets make sure we have a basic rails application to work withrails new demorails g model Post titlerails g model Comment body:text post:belongs_toOpen your Post model and add:# models/post.rbhas_many :commentsNow lets create some records in our database by using seeds.rb file# db/seeds.rb2.times do |i| post = Post.create(title: &quot;post #{i}&quot;) 2.times do |j| post.comments.create(body: &quot;Comment: #{j}&quot;) endendrails db:seedCountIf you want to know how many entries are there in Post model, than use count, which will perform select count(*) ... query and return integer value as result.Post.count Post Count (0.5ms) SELECT COUNT(*) FROM &quot;posts&quot;=&amp;gt; 2But if you already have list of ActiveRecord objects stored in a variable, then using count is not a good idea, because it will still fires additional ActiveRecord query, because count is a ActiveRecord method.posts = Posts.allposts.count Post Count (0.3ms) SELECT COUNT(*) FROM &quot;posts&quot;=&amp;gt; 2And if we are dealing with associated child records inside loop/iteration then using count in active record association object can cause N+1 query problem. So always avoid doing this.# posts with eger loaded commentsposts = Post.includes(:comments).first(2) Post Load (0.1ms) SELECT &quot;posts&quot;.* FROM &quot;posts&quot; ORDER BY &quot;posts&quot;.&quot;id&quot; ASC LIMIT ? [[&quot;LIMIT&quot;, 2]] Comment Load (0.2ms) SELECT &quot;comments&quot;.* FROM &quot;comments&quot; WHERE &quot;comments&quot;.&quot;post_id&quot; IN (?, ?) [[&quot;post_id&quot;, 1], [&quot;post_id&quot;, 2]]# first iterationposts.map { |p| p.comments.count } Comment Count (0.1ms) SELECT COUNT(*) FROM &quot;comments&quot; WHERE &quot;comments&quot;.&quot;post_id&quot; = ? [[&quot;post_id&quot;, 1]] Comment Count (0.1ms) SELECT COUNT(*) FROM &quot;comments&quot; WHERE &quot;comments&quot;.&quot;post_id&quot; = ? [[&quot;post_id&quot;, 2]]=&amp;gt; [2, 2]# second iterationposts.map { |p| p.comments.count } Comment Count (0.1ms) SELECT COUNT(*) FROM &quot;comments&quot; WHERE &quot;comments&quot;.&quot;post_id&quot; = ? [[&quot;post_id&quot;, 1]] Comment Count (0.1ms) SELECT COUNT(*) FROM &quot;comments&quot; WHERE &quot;comments&quot;.&quot;post_id&quot; = ? [[&quot;post_id&quot;, 2]]=&amp;gt; [2, 2]Here we can see, if we use count in post.comments association, than it will always fire a select count(*) ... SQL query for each post in an iteration. This will always give correct result but with the cost of N+1 query problem. Which can impact performance of you app vastly, depending on how many records you are iterating through.lengthOn the other hand, you can’t use length on ActiveRecord Model directlyPost.length&amp;gt; undefined method `length&#39; for Post:Class (NoMethodError)but lets say you already have a variable which holds your list of post objects, then using length will avoid additional ActiveRecord queryposts = Post.allposts.length=&amp;gt; 2as you can see, there is no additional ActiveRecord query called, because length is a ruby method.Now lets check our above active record association example and use .length instead of .countposts = Post.includes(:comments).first(2) Post Load (0.1ms) SELECT &quot;posts&quot;.* FROM &quot;posts&quot; ORDER BY &quot;posts&quot;.&quot;id&quot; ASC LIMIT ? [[&quot;LIMIT&quot;, 2]] Comment Load (0.2ms) SELECT &quot;comments&quot;.* FROM &quot;comments&quot; WHERE &quot;comments&quot;.&quot;post_id&quot; IN (?, ?) [[&quot;post_id&quot;, 1], [&quot;post_id&quot;, 2]]# first iterationposts.map { |p| p.comments.length }=&amp;gt; [2, 2]Because we are already eger loading includes(:comments), there is no further AR query made. Another thing to note is, if you are not using eger loading, than for the first iteration, it will fire ActiveRecord query, and cache the result, and second attempt to call .length will return cached result.Sizesize is an ActiveRecord method which is equivalent to length if the collection has been already loaded. Size will pick length or count based on your ActiveRecord object. so if you don’t want to manage length or count then using size is more efficient.That being said, you still can’t use .size on model class directly with Post.size, it will throw NoMethodError.posts = Post.allposts.size=&amp;gt; 2No additional ActiveRecord query fired.And with association:posts = Post.includes(:comments).first(2) Post Load (0.1ms) SELECT &quot;posts&quot;.* FROM &quot;posts&quot; ORDER BY &quot;posts&quot;.&quot;id&quot; ASC LIMIT ? [[&quot;LIMIT&quot;, 2]] Comment Load (0.2ms) SELECT &quot;comments&quot;.* FROM &quot;comments&quot; WHERE &quot;comments&quot;.&quot;post_id&quot; IN (?, ?) [[&quot;post_id&quot;, 1], [&quot;post_id&quot;, 2]]# first iterationposts.map { |p| p.comments.size }=&amp;gt; [2, 2]No additional ActiveRecord query fired. Size also have benifit if you are using counter cache" }, { "title": "Use Timecop to time travel in testing", "url": "/posts/use-timecop-to-time-travel-in-testing/", "categories": "Blog, RubyOnRails", "tags": "ruby on rails, javascript, hash", "date": "2022-01-11 19:24:00 +0545", "snippet": "In this post we are going to use timecop rubygem to test our trial_remaining_time method which actual returns number of days remaining in user’s trial plan. timecop is a gem providing time travel and time freezing capabilities, making it dead simple to test time-dependent code. It provides a unified method to mock Time.now, Date.today, and DateTime.now in a single call.class User &amp;lt; ApplicationRecord # Method to return number of remaining trial days def trial_remaining_days days = (created_at.to_date - 15.days.ago.to_date).to_i return days if days.positive? 0 endendAnd we want to make sure our method is working fine, so how do we actually test it. Using timecop makes it dead simple to travel time and freeze it so that we can check expected result in different future dates for our usecase. NOTE: I am using default unit_test from rails project, you can also use rspec without any issue.require &#39;test_helper&#39;class UserTest &amp;lt; ActiveSupport::TestCase test &#39;should return remaining days for user&#39; do user = User.new(created_at: Time.current) (15..0).to_a.each_with_index do |day, index| Timecop.freeze(day.days.from_now) do assert_equal index, user.trial_remaining_days end end end test &#39;should return 0 trial remaining days for user created more than 15 days ago&#39; do user = User.new(created_at: Time.current) Timecop.freeze(16.days.from_now) do assert_equal 0, user.trial_remaining_days end Timecop.freeze(20.days.from_now) do assert_equal 0, user.trial_remaining_days end endendRunning 2 tests in a single process (parallelization threshold is 50)Run options: --seed 62828# Running:..Finished in 0.038093s, 52.5033 runs/s, 52.5033 assertions/s.2 runs, 2 assertions, 0 failures, 0 errors, 0 skipsTo understand it lets print values of Timecop.freeze method# Today is 2022-01-11Time.now=&amp;gt; 2022-01-11 19:45:44.501290989 +0545# lets freeze time in 0.days and see what will happensirb(main):008:0&amp;gt; Timecop.freeze(0.days.from_now) { puts Time.current }2022-01-11 14:01:00 UTC# if we freeze time in 10.days from nowirb(main):010:0&amp;gt; Timecop.freeze(10.days.from_now) { puts Time.now }2022-01-21 19:47:05 +0545happy hacking!" }, { "title": "Run Sidekiq as systemd process", "url": "/posts/run-sidekiq-as-systemd-process/", "categories": "Blog, RubyOnRails", "tags": "ruby on rails, javascript, hash", "date": "2022-01-10 18:13:00 +0545", "snippet": "The simplest way to run Sidekiq in your production server is to use capistrano-sidekiq gem, but it is not recommended because Capistrano uses demonization by default so if the Sidekiq process crashes, it will not restart automatically.Whereas setting up Sidekiq as a systemd process will ensure the process is restarted if Sidekiq crashes.Here is a sample file that you can refer to for simple Sidekiq configuration, but it is strongly recommended to read the systemd documentation on the .service file and executing processes. Every developer who uses Linux should read these pages many times. More Information: https://github.com/mperham/sidekiq/wiki/Deployment#running-your-own-processcreate a file inside /usr/lib/systemd/system for CentOS or /lib/systemd/system for Ubuntu and copy below content.sudo vim /lib/systemd/system/sidekiq.service## This file tells systemd how to run Sidekiq as a 24/7 long-running daemon.## Customize this file based on your bundler location, app directory, etc.# Customize and copy this into /usr/lib/systemd/system (CentOS) or /lib/systemd/system (Ubuntu).# Then run:# - systemctl enable sidekiq# - systemctl {start,stop,restart} sidekiq## This file corresponds to a single Sidekiq process. Add multiple copies# to run multiple processes (sidekiq-1, sidekiq-2, etc).## Use `journalctl -u sidekiq -rn 100` to view the last 100 lines of log output.#[Unit]Description=sidekiq# start us only once the network and logging subsystems are available,# consider adding redis-server.service if Redis is local and systemd-managed.After=syslog.target network.target# See these pages for lots of options:## https://www.freedesktop.org/software/systemd/man/systemd.service.html# https://www.freedesktop.org/software/systemd/man/systemd.exec.html## THOSE PAGES ARE CRITICAL FOR ANY LINUX DEVOPS WORK; read them multiple# times! systemd is a critical tool for all developers to know and understand.#[Service]## !!!! !!!! !!!!## As of v6.0.6, Sidekiq automatically supports systemd&#39;s `Type=notify` and watchdog service# monitoring. If you are using an earlier version of Sidekiq, change this to `Type=simple`# and remove the `WatchdogSec` line.## !!!! !!!! !!!!#Type=notify# If your Sidekiq process locks up, systemd&#39;s watchdog will restart it within seconds.WatchdogSec=10WorkingDirectory=/home/deploy/myapp/current# If you use rbenv:ExecStart=/bin/bash -lc &#39;exec /home/deploy/.rbenv/shims/bundle exec sidekiq -e production&#39;# If you use the system&#39;s ruby:# ExecStart=/usr/local/bin/bundle exec sidekiq -e production# If you use rvm in production without gemset and your ruby version is 2.6.5# ExecStart=/home/deploy/.rvm/gems/ruby-2.6.5/wrappers/bundle exec sidekiq -e production# If you use rvm in production wit gemset and your ruby version is 2.6.5# ExecStart=/home/deploy/.rvm/gems/ruby-2.6.5@gemset-name/wrappers/bundle exec sidekiq -e production# Use `systemctl kill -s TSTP sidekiq` to quiet the Sidekiq process# !!! Change this to your deploy user account !!!User=deployGroup=deployUMask=0002# Greatly reduce Ruby memory fragmentation and heap usage# https://www.mikeperham.com/2018/04/25/taming-rails-memory-bloat/Environment=MALLOC_ARENA_MAX=2# if we crash, restartRestartSec=1Restart=on-failure# output goes to /var/log/syslog (Ubuntu) or /var/log/messages (CentOS)StandardOutput=syslogStandardError=syslog# This will default to &quot;bundler&quot; if we don&#39;t specify itSyslogIdentifier=sidekiq[Install]WantedBy=multi-user.target NOTE: make sure to update myapp to your app in this file. And also make sure you uncomment ExecStart section for your ruby path, e.g rbenv, rvm or system ruby path. You will get example script for each of these ruby paths in the file.Now enable the sidekiq service, and start/stop/restart them as neededNow you can enable, start, stop, restart sidekiq with:# enable sidekiq servicesudo systemctl enable sidekiq# start/stop/restart servicesudo systemctl start sidekiqsudo systemctl stop sidekiqsudo systemctl restart sidekiq# Check status withsudo systemctl status sidekiqLogsIf you want to check logs, then you can use journalctlsudo journalctl -u sidekiq -rn 100to view last 100 lines of log output.Happy Hacking!!!" }, { "title": "filter empty element from an array", "url": "/posts/filter-empty-element-from-an-array/", "categories": "Tips, Javascript", "tags": "ruby on rails, javascript, hash", "date": "2022-01-10 11:07:00 +0545", "snippet": "In this post we will see how we can filter array of element without empty element which can be null or &#39;&#39;Using javascriptJavascript .filter() method creates a new array with all elements that pass the test implemented by the provided function.arr = [&#39;apple&#39;, &#39;banana&#39;, &#39;&#39;, &#39;mango&#39;, null, undefined]From the given array of elements we can easily get non empty elements by using .filter() method:arr.filter(fruit =&amp;gt; fruit)&amp;gt; (3) [&#39;apple&#39;, &#39;banana&#39;, &#39;mango&#39;]This works because only non-empty elements will return true from the callback functionUsing RubyIn Ruby .reject() method returns a new array containing the items in self for which the given block is not true. The ordering of non-rejected elements is maintained.arr = [&#39;apple&#39;, &#39;banana&#39;, &#39;&#39;, &#39;mango&#39;, nil] NOTE: blank? method will return true for both &#39;&#39; and nil values empty? method will return true for &#39;&#39; but throw undefined method empty? for nil class for nil values nil? method will return true for nil and false for &#39;&#39; values# using blank?arr.reject &amp;amp;:blank?=&amp;gt; [&quot;apple&quot;, &quot;banana&quot;, &quot;mango&quot;]# using empty?arr.reject &amp;amp;:empty?=&amp;gt; undefined method &#39;empty?&#39; for nil:NilClass# using nil?arr.reject &amp;amp;:nil?=&amp;gt; [&quot;apple&quot;, &quot;banana&quot;, &quot;&quot;, &quot;mango&quot;]" }, { "title": "ruby safe navigation operator (&amp;.)", "url": "/posts/ruby-safe-navigation-operator/", "categories": "Tips, RubyOnRails", "tags": "ruby on rails", "date": "2022-01-09 16:30:00 +0545", "snippet": "This post you will learn about the most interesting addition to Ruby 2.3.0, the Safe Navigation Operator(&amp;amp;.).ScenarioLets say we have a cart object, which belongs to an owner and we want to know the email of the owner.Most common solution we find Devs doing in this situation is:cart &amp;amp;&amp;amp; cart.owner &amp;amp;&amp;amp; cart.owner.emailwhich is checking if cart is present, than check cart.owner and if it present than return cart.owner.email as a result, which is tidious to write and doesn’t looks good, also imagine, if there are multi level associations to work on.Now another solution is:cart.try(:owner).try(:email)bit shorter and cleaner than above solution but we can improve this by using &amp;amp;. operator:cart&amp;amp;.owner&amp;amp;.emailIt will return the email address of owner, if cart and owner present, otherwise, return nil." }, { "title": "convert deeply nested JSON into OpenStruct object", "url": "/posts/convert-deeply-nested-json-into-openstruct-object/", "categories": "Tips, RubyOnRails", "tags": "ruby on rails, json, hash", "date": "2022-01-09 16:11:00 +0545", "snippet": "This post will help you convert JSON objects into an OpenStruct object, which will allow us to extract value directly using . dot notation e.g: json_result.keyIf you are using with any JSON API services, than you might have come across a situation where you have to extract certain value, check if it exists in JSON response or not and doing that in traditional way is too much pain{ &quot;name&quot;: &quot;John doe&quot;, &quot;email&quot;: &quot;john@example.com&quot;, &quot;address&quot;: { &quot;primary&quot;: { &quot;city&quot;: &quot;Pokhara&quot; } }}Now obviously, we want to extract a value of city but for that, we need to go with the pain of verifying each parent keys to have a child result like so:def city(json) return if json[&#39;address&#39;].blank? return if json[&#39;address&#39;][&#39;primary&#39;].blank? json[&#39;address&#39;][&#39;primary&#39;][&#39;city&#39;]endcity(json)=&amp;gt; &quot;Pokhara&quot;JSON to OpenStruct objectwe can simplyfy this by using Safe navigation operator and OpenStruct class.res = JSON.parse(json, object_class: OpenStruct)res.address&amp;amp;.primary&amp;amp;.city=&amp;gt; &quot;Pokhara&quot;Hash to OpenStruct objectwe can also convert hash to openstruct object by converting hash into JSON using .to_json method:res = JSON.parse(hsh.to_json, object_class: OpenStruct)res.address&amp;amp;.primary&amp;amp;.city=&amp;gt; &quot;Pokhara&quot;More info https://ruby-doc.org/stdlib-2.5.1/libdoc/ostruct/rdoc/OpenStruct.html" }, { "title": "Use dig method to get value from deeply nested key", "url": "/posts/use-dig-method-to-get-value-from-deeply-nested-key/", "categories": "Tips, RubyOnRails", "tags": "ruby on rails, hash", "date": "2022-01-09 15:58:00 +0545", "snippet": "Learn how to extracts the nested value specified by the sequence of key objects by calling dig at each step, returning nil if any intermediate step is nil.Example dataLets say we have following Hash to work on, this can be a rails params object or any other Hash objectparams = { name: &quot;John&quot;, address: { primary: { city: &#39;Pokhara&#39; } } }And we want to get the value of city from the given object, and one way to do is:params[:address] &amp;amp;&amp;amp; params[:address][:primary] &amp;amp;&amp;amp; params[:address][:primary][:city]=&amp;gt; &quot;Pokhara&quot;we need to do that, because if lets say address or primary key is empty than we will getundefined method `[]&#39; for nil:NilClass (NoMethodError)And ruby has a clean and easy way to extract such values by using .dig methodparams.dig(:address, :primary, :city)=&amp;gt; &quot;Pokhara&quot;In this case, if address or primary key do not exists, or have nil as a value, than it will return nil as result without throwing error.More Info https://apidock.com/ruby/Hash/dig" }, { "title": "Rails Notes Explained", "url": "/posts/rails-notes-explained/", "categories": "Tips, RubyOnRails", "tags": "ruby on rails, rake task", "date": "2022-01-09 15:40:00 +0545", "snippet": "In this post you will learn how to list down all of your todos, fixme, optimize tags from the rails project.In your rails project if you run rake notes (you can also use rails notes in rails 5+ projects) in your terminal, it will search for comments beginning with a specific keyword and it will print you the filename and line number for your:For example, we have given controller with commentsclass PostsController &amp;lt; ApplicationController before_action :set_post, only: %i[ show edit update destroy ] # TODO: Write a testcase for index action def index @posts = Post.all end # OPTIMIZE: Show action is taking too much memory, optimize it def show end # FIXME: new action has bad code, refactor it! def new @post = Post.new endendand if we run rails notes&amp;gt; rails notesapp/controllers/posts_controller.rb: * [ 5] [TODO] Write a testcase for index action * [11] [OPTIMIZE] show action is taking too much memory, optimize it * [15] [FIXME] new action have bad code, refactor it!More Info https://www.rubydoc.info/gems/rake-notes/0.2.0/Rake/Notes/SourceAnnotationExtractor" }, { "title": "Ruby merge Vs deep_merge", "url": "/posts/ruby-merge-vs-deep-merge/", "categories": "Tips, RubyOnRails", "tags": "ruby on rails, hash", "date": "2022-01-09 15:28:00 +0545", "snippet": "This post will help you understand the difference between Ruby’s merge and Rails deep_merge method.MergeRuby’s merge method merges one hash into another, as it’s name suggest{ first_name: &#39;John&#39; }.merge({ last_name: &#39;Doe&#39; })=&amp;gt; {:first_name=&amp;gt;&quot;John&quot;, :last_name=&amp;gt;&quot;Doe&quot;}Now lets say we have following 2 Hash objectsuser1 = { name: &#39;John&#39;, address: { city: &#39;City&#39; } }user2 = { name: &#39;John&#39;, address: { zip: &#39;12345&#39; } }And if we use .merge() this time the result will be:user1.merge(user2)=&amp;gt; {:name=&amp;gt;&quot;John&quot;, :address=&amp;gt;{:zip=&amp;gt;&quot;12345&quot;}}Deep MergeAnd if we want to merge both city and zip addresses for the user, then we need to use .deep_merge() methoduser1.deep_merge(user2)=&amp;gt; {:name=&amp;gt;&quot;John&quot;, :address=&amp;gt;{:city=&amp;gt;&quot;City&quot;, :zip=&amp;gt;&quot;12345&quot;}} NOTE: .deep_merge is a rails method and .merge is a ruby’s methodReferences: https://apidock.com/rails/Hash/deep_merge https://apidock.com/ruby/Hash/merge" } ]
